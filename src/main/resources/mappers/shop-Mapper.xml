<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kong.mappers.shopMapper">


	<!-- 카테고리별 상품 리스트 : 1차 분류 -->
	<select id="list_1" resultType="com.kong.domain.itemViewVO">
		SELECT 
			g.itemNum, 
			g.itemName,
			g.cateCode, 
			c.cateCodeRef, 
			c.cateName, 
			itemPrice, 
			itemStock, 
			itemDes,
			regDate, 
			g.itemImg, 
			g.itemThumbImg 
		FROM
			kong_item g
		INNER JOIN 
			category c
		ON 
			g.cateCode = c.cateCode
		WHERE 
			g.cateCode = #{cateCode}
		OR
			c.cateCodeRef = #{cateCodeRef}
	</select>

	<!-- 카테고리별 상품 리스트 : 2차 분류 -->
	<select id="list_2" resultType="com.kong.domain.itemViewVO">
		SELECT
			g.itemNum,
			g.itemName,
			g.cateCode,
			c.cateCodeRef,
			c.cateName,
			itemPrice,
			itemStock,
			itemDes,
			regDate,
			g.itemImg,
			g.itemThumbImg
		FROM
			kong_item g
		INNER JOIN 
			category c
		ON
			g.cateCode = c.cateCode
		WHERE
			g.cateCode = #{cateCode}
	</select>

	<!-- 상품 조회 + 카테고리 조인 -->
	<select id="itemView" resultType="com.kong.domain.itemViewVO">
		SELECT
			g.itemNum,
			g.itemName,
			g.cateCode,
			c.cateCodeRef,
			c.cateName,
			itemPrice,
			itemStock,
			itemDes,
			itemImg,
			regDate ,
			g.itemImg,
			g.itemThumbImg
		FROM
			kong_item g
		INNER JOIN 
			category c
		ON
			g.cateCode = c.cateCode
		WHERE
			g.itemNum = #{itemNum}
	</select>

	<!-- 상품 소감(댓글) 작성 -->
	<insert id="registerReply">
		INSERT INTO 
			kong_itemreply
				(itemNum, 
				userId, 
				repCon,
				rating)
		VALUES 
			(#{itemNum}, 
			#{userId}, 
			#{repCon},
			#{rating})
	</insert>
	<!-- 해당 상품 평점 평균 -->
	<select id="getRatingAverage" resultType="double">
		SELECT 
			avg(rating)
		FROM
			kong_itemreply
		WHERE 
			itemNum = #{itemNum}
	</select>
	<!-- 평점 평균 값 -->
	<update id="updateRating">
		UPDATE 
			kong_item
		SET 
			ratingAvg = #{ratingAvg}
		WHERE
			itemNum = #{itemNum}
	</update>

	<!-- 상품 소감(댓글) 리스트 -->
	<select id="replyList"
		resultType="com.kong.domain.itemReplyListVO">
		SELECT
			r.itemNum, 
			r.userId, 
			r.repNum, 
			r.repCon, 
			r.regDate,
			r.rating, 
			m.userName
		FROM 
			kong_itemreply r
		INNER JOIN 
			kong_member m
		ON
			r.userId = m.userId
		WHERE
			itemNum = #{itemNum}
	</select>

	<!-- 상품 소감(댓글) 삭제 -->
	<delete id="deleteReply">
		DELETE 
		FROM 
			kong_itemreply
		WHERE 
			repNum = #{repNum} and userId = #{userId}
	</delete>

	<!-- 아이디 체크 -->
	<select id="replyUserIdCheck" resultType="String">
		SELECT 
			userId
		FROM
			kong_itemreply
		WHERE 
			repNum = #{repNum}
	</select>

	<!-- 상품 소감(댓글) 수정 -->
	<update id="modifyReply">
		UPDATE 
			kong_itemreply
		SET
			repCon = #{repCon}
		WHERE
			repNum = #{repNum} and userId = #{userId}
	</update>

	<!-- 카트 담기 -->
	<insert id="addCart">
		INSERT
			into
			kong_cart 
			(userId,
			itemNum,
			cartStock)
		VALUES 
			(#{userId}, 
			#{itemNum}, 
			#{cartStock})
	</insert>

	<!-- 카트 리스트 -->
	<select id="cartList" resultType="com.kong.domain.CartListVO">
		SELECT
			row_number() over(
			order by c.cartNum desc) as num,
			c.cartNum,
			c.userId,
			c.itemNum,
			c.cartStock,
			c.addDate,
			g.itemName,
			g.itemPrice,
			g.itemThumbImg
		FROM
			kong_cart c
		INNER JOIN 
			kong_item g
		ON
			c.itemNum = g.itemNum
		WHERE
			c.userId = #{userId}
	</select>

	<!-- 카트 삭제 -->
	<delete id="deleteCart">
		DELETE 
		FROM 
			kong_cart
		WHERE 
			cartNum = #{cartNum}
		AND
			userId = #{userId}
	</delete>

	<!-- 주문 정보 -->
	<insert id="orderInfo">
		INSERT INTO
			kong_order(orderId,
			userId,
			orderRec,
			userAddr1,
			userAddr2,
			userAddr3,
			orderPhon,
			amount)
		VALUES(
			#{orderId},
			#{userId}, 
			#{orderRec}, 
			#{userAddr1}, 
			#{userAddr2}, 
			#{userAddr3},
			#{orderPhon}, 
			#{amount}
			)
	</insert>

	<!-- 주문 상세 정보 -->
	<insert id="orderInfo_Details">
		INSERT INTO
			kong_order_details
				(orderId,
				itemNum,
				cartStock)
		SELECT
			#{orderId}, 
			itemNum, 
			cartStock
		FROM
			kong_cart
	</insert>

	<!-- 카트 비우기 -->
	<delete id="cartAllDelete">
		DELETE 
		FROM 
			kong_cart
		WHERE 
			userId = #{userId}
	</delete>

	<!-- 카트 확인 -->
	<select id="checkCart" resultType="com.kong.domain.CartListVO">
		SELECT 
			* 
		FROM 
			kong_cart
		WHERE 
			userId = #{userId} and itemNum = #{itemNum}
	</select>

	<!-- 특정 유저의 주문 목록 -->
	<select id="orderList" resultType="com.kong.domain.OrderVO">
		SELECT
			orderId,
			userId,
			orderRec,
			userAddr1,
			userAddr2,
			userAddr3,
			orderPhon,
			amount,
			orderDate ,
			delivery
		FROM
			kong_order
		WHERE
			userId = #{userId}
	</select>

	<!-- 특정 주문 목록 -->
	<select id="orderView" resultType="com.kong.domain.OrderListVO">
		SELECT
			o.orderId,
			o.userId,
			o.orderRec,
			o.userAddr1,
			o.userAddr2,
			o.userAddr3,
			o.orderPhon,
			o.amount,
			o.orderDate,
			o.delivery,
			d.orderDetailsNum,
			d.itemNum,
			d.cartStock,
			g.itemName,
			g.itemThumbImg,
			g.itemPrice
		FROM
			kong_order o
		INNER JOIN 
			kong_order_details d
		ON
			o.orderId = d.orderId
		INNER JOIN
			kong_item g
		ON
			d.itemNum = g.itemNum
		WHERE
			o.userId = #{userId} AND o.orderId = #{orderId}
	</select>

	<!-- 전체상품 조회 -->
	<select id="allList" resultType="com.kong.domain.itemViewVO">
		SELECT 
			*
		FROM 
			kong_item
		ORDER BY
			itemNum 
		limit 12
	</select>

	<!-- 평점 상품 조회 -->
	<select id="likeSelect" resultType="com.kong.domain.itemViewVO">
		SELECT
			*
		FROM
			kong_item
		ORDER BY
			ratingAvg DESC
		LIMIT 8
	</select>

	<!-- 신규 상품 조회 -->
	<select id="newSelect" resultType="com.kong.domain.itemViewVO">
		SELECT
			*
		FROM
			kong_item
		ORDER BY
			regdate DESC
		LIMIT 8
	</select>

	<!-- 전체 상품 검색 -->
	<select id="search" resultType="com.kong.domain.itemViewVO">
		SELECT 
			*
		FROM 
			kong_item
		WHERE
			itemName LIKE CONCAT('%',#{keyword},'%')
		ORDER BY itemNum
	</select>

	<!-- 상품 총 개수 -->
	<select id="itemGetTotal" resultType="int">
		SELECT
			count(*) 
		FROM
			kong_item
		WHERE 
			itemName LIKE CONCAT('%',#{keyword},'%')
	</select>

</mapper>